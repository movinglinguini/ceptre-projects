%%%%%%%%%%%%
% Gripper-STRIPS domain based on the `gripper` example from IPC 1998.
% https://ipc98.icaps-conference.org/
% The goal and grounded predicates are from problem #1.


% All objects have a default "object" type according to the PDDL manual.
obj : type.

bool : type.

%%%%%%%
% Predicates
%%%%%%%

room obj bool : pred.
ball obj bool : pred.
gripper obj bool : pred.
at-robby obj bool : pred.
at obj obj bool : pred.
free obj bool : pred.
carry obj obj bool : pred.

%%%
% Objects
%%%

rooma : obj.
roomb : obj.

ball1 : obj.
ball2 : obj.
ball3 : obj.
ball4 : obj.

left : obj.
right : obj.

true : bool.
false : bool.

stage plan {
  move : room To true * room From true * at-robby From true -o at-robby To true * at-robby From false * room To true * room From true.
  pick : ball Obj true * room Room true * gripper Gripper true * at-robby Room true * at Obj Room true * free Gripper true -o carry Obj Gripper true * free Gripper false * at Obj Room false * ball Obj true * room Room true * gripper Gripper true * at-robby Room true.
  drop : ball Obj true * room Room true * gripper Gripper true * at-robby Room true * carry Obj Gripper true -o at Obj Room true * free Gripper true * at-robby Room true * gripper Gripper true * room Room true * ball Obj true.

  % This action is not in the original file. Just added for demonstration purposes.
  % Terminates the program if selected. Represents reaching the goal state for problem #1.
  reach-goal : at ball1 roomb true * at ball2 roomb true * at ball3 roomb true * at ball4 roomb true * at-robby Room true -o ().
}
#interactive plan.

% Initialize ground terms

context init = {
  room rooma true,
  room roomb true,

  ball ball4 true,
  ball ball3 true,
  ball ball2 true,
  ball ball1 true,

  at-robby rooma true,

  free left true,
  free right true,

  at ball4 rooma true,
  at ball3 rooma true,
  at ball2 rooma true,
  at ball1 rooma true,

  gripper left true,
  gripper right true
}

#trace _ plan init.

